package presentation.scenes.playerview;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;

import business.Mp3Player;
import business.data.Playlist;
import business.data.PlaylistManager;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ProgressBar;
import javafx.scene.control.Slider;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;
import presentation.components.controllbuttons.ControllButtons;
import presentation.components.trackInformation.TrackInformationUI;
import presentation.scenes.playerview.PlayerView;

public class PlayerViewController {

	private BorderPane root;
	private Label albumLabel;
	private Label titleLabel; 
	private String title;
	private ImageView cover;
	private TrackInformationUI info;
	private ControllButtons controllButtons;
	private Button play;
	private Button pause;
	private Button next;
	private Button back;
	private Button shuffle;
	private Button repeat;
	private ProgressBar slider;
	private Mp3Player player;
	Playlist playlist;
	Timer timer;
	TimerTask task;
	boolean isClicked = false;
	
	public PlayerViewController() {
		
		player = new Mp3Player();
		PlayerView mainView = new PlayerView();
		ControllButtons cb = new ControllButtons();
		TrackInformationUI inf = new TrackInformationUI();
		albumLabel = mainView.albumLabel;
		controllButtons = mainView.controllButtons;
		play = mainView.controllButtons.getPlayBtn();
		pause = mainView.controllButtons.getPauseBtn();
		next = mainView.controllButtons.getNextBtn();
		back = mainView.controllButtons.getBackBtn();
		shuffle = mainView.controllButtons.getShuffleBtn();
		repeat = mainView.controllButtons.getRepeatBtn();
		slider = mainView.trackInformation.getDuration();
		
		play.addEventHandler(ActionEvent.ACTION, new EventHandler<ActionEvent>() {
			
			public void handle(ActionEvent e) {
				
				player.play();
				titleLabel = mainView.trackInformation.setTitle(playlist.getTracks().get(0).getArtist());
				System.out.println("Title: " + player.getPlaylist().getTracks().get(0).getArtist());
				
//				timer = new Timer();
//				task = new TimerTask() {
//
//					@Override
//					public void run() {
//						double current = player.currentTime();
//						double end = player.length();
//						for (double i = 0; i <= end; i++) {
//							current = i / end;
//							slider.setProgress(current);
//							System.out.println("Slider: " + current);
//							 try {
//						        	Thread.sleep(1000);
//						        	} catch (InterruptedException e) {
//						        		e.printStackTrace();
//						        	}
//						}
////						double x = current/end;
////						slider.setProgress(x);
////						System.out.println("Slider: " + x);
//						// TODO Auto-generated method stub
//					}
//				}; 
//				
//				timer.scheduleAtFixedRate(task, 1000, 1000);
			}
		});
		
		pause.addEventHandler(ActionEvent.ACTION, new EventHandler<ActionEvent>() {
			
			public void handle(ActionEvent e) {
				player.pause();
				System.out.println("geht");
			}
		});
		
		next.addEventHandler(ActionEvent.ACTION, new EventHandler<ActionEvent>() {
			
			public void handle(ActionEvent e) {
				player.next();
			}
		});
		
		back.addEventHandler(ActionEvent.ACTION, new EventHandler<ActionEvent>() {
			
			public void handle(ActionEvent e) {
				player.back();
			}
		});
		
		shuffle.addEventHandler(ActionEvent.ACTION, new EventHandler<ActionEvent>() {
			
			public void handle(ActionEvent e) {
				player.shuffle();
			}
		});
		
		cover = mainView.cover;
		root = mainView;

		
	}
	
	// Ruft die FXML Datei auf, f√ºr FXML Datei? 
//	public void initalize() {
//		play.getPlayBtn().addEventHandler(ActionEvent.ACTION, new PlayHandler());
//		System.out.println("Funzt");
//		
//	};
	
	public Pane getRoot() {
		return root;
	}
}
