import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import de.hsrm.mi.eibo.simpleplayer.SimpleAudioPlayer;
import de.hsrm.mi.eibo.simpleplayer.SimpleMinim;

public class Controller {

	public static void main(String [] args) {
		
		start();
	}
	
	public static void start() {
		boolean isRunning = true;
		Scanner scanner = new Scanner(System.in);

		PlaylistManager playlistManager = new PlaylistManager(new ArrayList<>());
		
		String file = "/Users/jpedraza/eclipse-workspace/mp3-player/music/test_playlist.m3u";
		
		Playlist playlist = new Playlist("Playlist 1");
//		playlist.addTrack(new Track("Song 1", "Künstler 1", "/Users/jpedraza/Downloads/01 Bring Mich Nach Hause.mp3"));
//		playlist.addTrack(new Track("Song 1", "Künstler 1", "/Users/jpedraza/Downloads/02 Drei Worte (1).mp3"));
//		
//		playlistManager.addPlaylist(playlist);
//		
//		playlistManager.savePlaylist(playlist, playlist + ".m3u");
		
//		 String fileName = "deine_datei.txt"; // Pfad zur Datei

	        try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
	            String line;
	            while ((line = reader.readLine()) != null) {
	                System.out.println(line); // Hier kannst du mit jeder Zeile arbeiten
	            }
	        } catch (IOException e) {
	            e.printStackTrace();
	        }



		
		
		playlistManager.savePlaylist(playlist);
		playlistManager.getPlaylist(file);
		
		System.out.println("Playlisten: " + playlistManager.getPlaylist(file).getName());
		
		Mp3Player player = new Mp3Player();

		
		
		
		String input;
		
//		 System.out.println("Bitte gebe den Dateinamen von deinem Song ein: ");
		 String song = "/Users/jpedraza/Downloads/01 Bring Mich Nach Hause.mp3";
		
//		minim = new SimpleMinim(true); // Damit es Nebeläufig ist auf "true" stellen !!!
//		audioPlayer = minim.loadMP3File(song);
		 
//		 audioPlayer.play();
		 
		 while (isRunning) {
			 System.out.println("Geben Sie Ihren Befehl ein:");
			 input = scanner.nextLine();
			 
			 String [] split = input.split(" ");
			 
			 switch(split[0]) {
			 case "play": 
				 player.play();
				 break;
			 case "pause": 
				 player.pause();
				 break;
			 case "next": 
				 player.next();
				 break;
			 case "back": 
				 player.back();
				 break;
			 case "volume": 
				 float volume = Float.parseFloat(split[1]);
				 System.out.println(volume);
				 player.setVolume(volume); // zwischen 0 und -30
				 break;
			 case "quit": 
				 player.stop();
				 break;
				 
			 }
		 }	
	}
	 public static Playlist fromM3U(String m3uFileName) {
	        Playlist playlist = null;

	        try (BufferedReader reader = new BufferedReader(new FileReader(m3uFileName))) {
	            String line;
	            boolean isM3U = false;

	            while ((line = reader.readLine()) != null) {
	                if (line.startsWith("#EXTM3U")) {
	                    isM3U = true;
	                    playlist = new Playlist("Imported Playlist");
	                } else if (isM3U) {
	                    // Dies geht davon aus, dass die Zeilen in der M3U-Datei Dateipfade sind
	                    Track track = new Track("Song Title", "Artist Name", line);
	                    playlist.addTrack(track);
	                }
	            }
	        } catch (IOException e) {
	            e.printStackTrace();
	        }

	        return playlist;
	    }
}
